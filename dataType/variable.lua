#!/usr/local/bin/lua

--[[
--
-- lua 中的变量使用前需要在代码中进行声明，由如下变量类型
--
-- 全局变量：lua 中变量全部是全局变量，哪怕是语句块或者函数里面。除了使用local声明的变量
--
-- 局部变量：local 显示声明的变量，作用域为 显示声明位置开始，当前语句块结束
--
-- 表中的域
--
--  << 所有的变量的初始值均为 nil >>
--
--
--  1、应该尽可能的使用局部变量，主要有两点好处：
--      - 可以避免命名的冲突
--      - 访问局部变量的速度要快于全局变量
--
--]]

A = 5         -- 全局变量
local b = 10  -- 局部变量

print(A,b)

local function joke()
    C = 5          -- 全局变量
    local d = 10   -- 局部变量
end

joke()

print(C,d)         -- 5,nil

-------------------------------
do
    local a = 6    -- 局部变量
    b = 6
    print(a,b)
end

print(a, b)

---------------------------------------
-- 赋值是改变变量和改变域的最基本的方法

local a = 'hello'..'world'

--可以单次给多个变量赋值，右侧会依次给左侧变量赋值, 各变量，值之间用逗号隔开
--当变量的数量多余赋值的数量，多余的变量全部是 nil
--当变量的数量少于赋值的数量，多余的数值会被忽略

local x, y, z = 'alex', false, 20, 40

local d = 'dux','78'

print(x,y,z)
print(d)

--------------------------------------
-- lua 会 先计算右边的值再进行赋值
-- swap 变量的值也是及其简单的
-- a, b = b, a

local o, p = 5, 6
print(o,p)
o, p = p, o
print(o,p)

-------------------------------------
-- 多值赋值常见的用法是交换变量，或用变量接收函数的返回值
--
local function hobby()
    return 'basketball','football'
end

local h,i = hobby()

print(h, i)
